!function(){const e=e=>"checkbox"===e.type,t=e=>"radio"===e.type,n=e=>"select"===e.tagName.toLowerCase(),r=e=>"value"in e,o=e=>new Set(Array.isArray(e)?e:[e]);function i(e){const t=document.querySelectorAll(e);return 0===t.length&&console.warn(`No elements found matching selector ${e}`),[...t]}window.bind=function({obj:l,prop:u,sel:a,attr:c}){!function({obj:e,prop:t,sel:n}){if(!e)throw"'obj' argument cannot be null or undefined.";if("string"!=typeof t||0===t.length)throw"'prop' argument must be a String defining the name a property.";if("string"!=typeof n||0===n.length)throw"'sel' argument must be a String defining a selector."}({obj:l,prop:u,sel:a});const f=l.hasOwnProperty(u)?l[u]:void 0,s={get:()=>function(o,l){const u=i(o);if(0===u.length)return null;let a=u[0];if(l)return a.getAttribute(l);if(!r(a))return a.innerHTML;if(e(a))return u.filter(t=>e(t)&&t.checked).map(e=>"on"===e.value?e.name:e.value);if(n(a)){return[...a.querySelectorAll("option")].filter(e=>e.selected).map(e=>e.value)}t(a)&&(a=u.filter(t).find(e=>e.checked));return a.value}(a,c),set:l=>function(l,u,a){const c=i(l);if(0===c.length)return;const f=c[0];if(e(f)){const t=o(u);return void c.filter(e).forEach(e=>e.checked=t.has(e.value)||t.has(e.name))}if(n(f)){const e=o(u);return void f.querySelectorAll("option").forEach(t=>t.selected=e.has(t.value))}if(t(f))return void c.filter(t).forEach(e=>e.checked=e.value===u);c.forEach(e=>function(e,t,n){n?e.setAttribute(n,t):r(e)?e.value=t:e.innerHTML=t}(e,u,a))}(a,l,c),configurable:!0,enumerable:!0};Object.defineProperty(l,u,s),void 0!==f&&(console.info(`Property '${u}' already exists in object. Will override previous definition but retain old value of ${f}.`),l[u]=f)}}();